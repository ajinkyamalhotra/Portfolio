{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\ajink\\\\IdeaProjects\\\\Portfolio\\\\src\\\\Components\\\\Projects.js\";\nimport React from 'react';\nimport { Card, CardActions, Chip, CardText, Cell, Grid, CardTitle, Button } from \"react-mdl\";\n\nfunction CardTitleStyle(url, title) {\n  var styles = {\n    height: '176px',\n    background: url,\n    backgroundSize: '100%',\n    border: 'none',\n    color: title === '2D Convolution' || title === 'Histogram' || title === 'Firearm Classification' ? 'black' : 'white'\n  };\n  return styles;\n}\n\nvar ChipStyle = {\n  margin: \"2px\",\n  backgroundColor: 'rgb(63,81,181)',\n  color: 'white'\n};\nvar ProjectsData = [{\n  Title: \"Chess Master\",\n  CardTitleImage: 'url(https://upload.wikimedia.org/wikipedia/commons/6/6f/ChessSet.jpg) no-repeat',\n  GitHubLink: \"https://github.com/ajinkyamalhotra/Chess-Master\",\n  Description: \"• Designed a human vs CPU chess-like game and created a computer player, using Minimax algorithm.\",\n  Chips: [\"Java\", \"Minimax\", \"DLS\", \"IDS\", \"AI\"]\n}, {\n  Title: \"2D Convolution\",\n  CardTitleImage: 'url(http://colah.github.io/posts/2014-07-Understanding-Convolutions/img/RiverTrain-ImageConvDiagram.png) no-repeat',\n  GitHubLink: \"https://github.com/ajinkyamalhotra/GpuProgrammingCuda/blob/master/ConvolutionKernel.cu\",\n  Description: \"• Implemented a tiled image convolution CUDA kernel which utilizes shared memory and constant memory.\",\n  Chips: [\"CUDA\", \"C/C++\", \"GPU Programming\"]\n}, {\n  Title: \"Histogram\",\n  CardTitleImage: 'url(https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Histogram_of_arrivals_per_minute.svg/1200px-Histogram_of_arrivals_per_minute.svg.png) 15% no-repeat #46B6AC',\n  GitHubLink: \"https://github.com/ajinkyamalhotra/GpuProgrammingCuda/blob/master/HistogramKernel.cu\",\n  Description: \"• Implemented an efficient Histogram algorithm using privatization technique for an input array of Integers.\",\n  Chips: [\"CUDA\", \"C/C++\", \"GPU Programming\"]\n}, {\n  Title: \"Firearm Classification\",\n  CardTitleImage: 'url(https://developers.google.com/machine-learning/crash-course/images/SoftmaxLayer.svg) no-repeat',\n  GitHubLink: \"https://github.com/ajinkyamalhotra/Firearm-Classification\",\n  Description: \"• Designed a Neural Network (NN) using TFLearn to classify different types of firearms.\",\n  Chips: [\"Python\", \"CNN\", \"TensorFlow\"]\n}, {\n  Title: \"Porfolio\",\n  CardTitleImage: 'url(http://www.sclance.com/pngs/react-logo-png/react_logo_png_1141052.png) center',\n  GitHubLink: \"https://github.com/ajinkyamalhotra/Portfolio\",\n  Description: \"• Created a porfolio website using React.\",\n  Chips: [\"React\", \"JavaScript\", \"Material UI\"]\n}];\n\nvar Projects =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Projects, _React$Component);\n\n  function Projects() {\n    _classCallCheck(this, Projects);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Projects).apply(this, arguments));\n  }\n\n  _createClass(Projects, [{\n    key: \"render\",\n    value: function render() {\n      var chips = [];\n      var projectCards = [];\n\n      for (var i = 0; i < ProjectsData.length; i++) {\n        chips = [];\n\n        for (var j = 0; j < ProjectsData[i].Chips.length; ++j) {\n          chips.push(React.createElement(Chip, {\n            key: ProjectsData[i].Title + \"Chip\" + j,\n            style: ChipStyle,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, ProjectsData[i].Chips[j]));\n        }\n\n        projectCards.push(React.createElement(Cell, {\n          key: ProjectsData[i].Title,\n          style: {\n            width: 'initial'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          expand: true,\n          style: CardTitleStyle(ProjectsData[i].CardTitleImage, ProjectsData[i].Title),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(CardTitle, {\n          style: {\n            paddingBottom: '0px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, ProjectsData[i].Title), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, ProjectsData[i].Description, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }), chips), React.createElement(CardActions, {\n          border: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Button, {\n          style: {\n            marginLeft: '33%'\n          },\n          raised: true,\n          ripple: true,\n          primary: true,\n          href: ProjectsData[i].GitHubLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"GitHub\")))));\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        style: {\n          margin: \"auto\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, projectCards));\n    }\n  }]);\n\n  return Projects;\n}(React.Component);\n\nexport default Projects;","map":{"version":3,"sources":["C:\\Users\\ajink\\IdeaProjects\\Portfolio\\src\\Components\\Projects.js"],"names":["React","Card","CardActions","Chip","CardText","Cell","Grid","CardTitle","Button","CardTitleStyle","url","title","styles","height","background","backgroundSize","border","color","ChipStyle","margin","backgroundColor","ProjectsData","Title","CardTitleImage","GitHubLink","Description","Chips","Projects","chips","projectCards","i","length","j","push","width","paddingBottom","marginLeft","justifyContent","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Card, CardActions, Chip, CardText, Cell, Grid, CardTitle, Button} from \"react-mdl\";\r\n\r\nfunction CardTitleStyle(url, title) {\r\n  const styles = {\r\n    height: '176px',\r\n    background: url,\r\n    backgroundSize: '100%',\r\n    border: 'none',\r\n    color: (title==='2D Convolution' || title==='Histogram' || title==='Firearm Classification') ? 'black' : 'white',\r\n  };\r\n  return styles;\r\n}\r\n\r\nconst ChipStyle = {\r\n  margin:\"2px\",\r\n  backgroundColor: 'rgb(63,81,181)',\r\n  color:'white'\r\n};\r\n\r\nconst ProjectsData = [\r\n  {          Title: \"Chess Master\",\r\n    CardTitleImage: 'url(https://upload.wikimedia.org/wikipedia/commons/6/6f/ChessSet.jpg) no-repeat',\r\n        GitHubLink: \"https://github.com/ajinkyamalhotra/Chess-Master\",\r\n       Description: \"• Designed a human vs CPU chess-like game and created a computer player, using Minimax algorithm.\",\r\n             Chips: [\"Java\", \"Minimax\", \"DLS\", \"IDS\", \"AI\"]},\r\n\r\n  {          Title: \"2D Convolution\",\r\n    CardTitleImage: 'url(http://colah.github.io/posts/2014-07-Understanding-Convolutions/img/RiverTrain-ImageConvDiagram.png) no-repeat',\r\n        GitHubLink: \"https://github.com/ajinkyamalhotra/GpuProgrammingCuda/blob/master/ConvolutionKernel.cu\",\r\n       Description: \"• Implemented a tiled image convolution CUDA kernel which utilizes shared memory and constant memory.\",\r\n             Chips: [\"CUDA\", \"C/C++\", \"GPU Programming\"]},\r\n\r\n  {          Title: \"Histogram\",\r\n    CardTitleImage: 'url(https://upload.wikimedia.org/wikipedia/commons/thumb/c/c3/Histogram_of_arrivals_per_minute.svg/1200px-Histogram_of_arrivals_per_minute.svg.png) 15% no-repeat #46B6AC',\r\n        GitHubLink: \"https://github.com/ajinkyamalhotra/GpuProgrammingCuda/blob/master/HistogramKernel.cu\",\r\n       Description: \"• Implemented an efficient Histogram algorithm using privatization technique for an input array of Integers.\",\r\n             Chips: [\"CUDA\", \"C/C++\", \"GPU Programming\"]},\r\n\r\n  {          Title: \"Firearm Classification\",\r\n    CardTitleImage: 'url(https://developers.google.com/machine-learning/crash-course/images/SoftmaxLayer.svg) no-repeat',\r\n        GitHubLink: \"https://github.com/ajinkyamalhotra/Firearm-Classification\",\r\n       Description: \"• Designed a Neural Network (NN) using TFLearn to classify different types of firearms.\",\r\n             Chips: [\"Python\", \"CNN\", \"TensorFlow\"]},\r\n\r\n  {          Title: \"Porfolio\",\r\n    CardTitleImage: 'url(http://www.sclance.com/pngs/react-logo-png/react_logo_png_1141052.png) center',\r\n        GitHubLink: \"https://github.com/ajinkyamalhotra/Portfolio\",\r\n       Description: \"• Created a porfolio website using React.\",\r\n             Chips: [\"React\", \"JavaScript\", \"Material UI\"]}\r\n];\r\n\r\nclass Projects extends React.Component{\r\n  render(){\r\n    let chips = []; let projectCards = [];\r\n\r\n    for (let i = 0; i < ProjectsData.length; i++) {\r\n      chips = [];\r\n      for(let j = 0; j<ProjectsData[i].Chips.length; ++j){\r\n        chips.push(\r\n          <Chip key={ProjectsData[i].Title+\"Chip\"+j} style={ChipStyle}>\r\n            {ProjectsData[i].Chips[j]}\r\n          </Chip>\r\n        )\r\n      }\r\n\r\n      projectCards.push(\r\n        <Cell key={ProjectsData[i].Title} style={{width: 'initial'}}>\r\n          <Card>\r\n            <CardTitle expand\r\n                       style={CardTitleStyle(ProjectsData[i].CardTitleImage, ProjectsData[i].Title)}/>\r\n            <CardTitle style={{paddingBottom: '0px'}}>{ProjectsData[i].Title}</CardTitle>\r\n            <CardText>\r\n              {ProjectsData[i].Description}\r\n              <br/><br/>\r\n              {chips}\r\n            </CardText>\r\n            <CardActions border>\r\n              <Button style={{marginLeft: '33%'}} raised ripple primary\r\n                      href={ProjectsData[i].GitHubLink}>GitHub</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Cell>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div style={{margin: \"auto\", justifyContent: \"center\"}}>\r\n        <Grid style={{margin: \"auto\", justifyContent: \"center\"}}>\r\n          {projectCards}\r\n        </Grid>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects;"]},"metadata":{},"sourceType":"module"}